!function(){angular.module("angular-jwt-auth",["angular-jwt","angular-jwt-auth.tools","angular-ws-service","LocalStorageModule"]).config(["$httpProvider","jwtInterceptorProvider","angularJwtAuthToolsProvider",function(e,t,n){t.tokenGetter=["$injector","options","jwtHelper","$http","WsService",function(e,t,r,o,i){if(Array.isArray(n.ignoredUrlExtensions)&&n.ignoredUrlExtensions.length){var u=t.url.split(".");if(-1!==n.ignoredUrlExtensions.indexOf(u.pop()))return null}var a=e.invoke(n.existingTokenRetriever);return null!==a.token&&r.isTokenExpired(a.token)?o({url:n.urlTokenRefresh,skipAuthorization:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:i.objectToURLEncoded,ignoreAuthModule:!0,method:"POST",data:{refresh_token:a.refreshToken}}).then(function(t){var r=t.data;return e.invoke(n.tokenSaver,r),r.token},function(){return null}):a.token}],e.interceptors.push("jwtInterceptor")}]).run(["$injector","$rootScope","authService","angularJwtAuthTools",function(e,t,n,r){t.$on("event:auth-loginRequired",function(){var t=e.invoke(r.credentialsRetriever);return null===t?void n.loginCancelled():void e.invoke(r.tokenRetriever,{_username:t.username,_password:t.password}).then(function(e){var t=e.data;n.loginConfirmed(t,function(e){return e.headers.Authorization="Bearer "+t.token,e})},function(){n.loginCancelled()})})}]).run(["$injector","$rootScope","angularJwtAuthTools",function(e,t,n){t.$on("event:auth-loginConfirmed",function(t,r){e.invoke(n.tokenSaver,r)}),t.$on("event:auth-loginCancelled",function(){e.invoke(n.tokenRemover)})}]),angular.module("angular-jwt-auth.tools",[]).provider("angularJwtAuthTools",function(){this.urlLoginCheck="/login_check",this.urlTokenRefresh="/token/refresh",this.credentialsRetriever=function(){},this.existingTokenRetriever=function(){},this.tokenRetriever=function(){},this.tokenSaver=function(){},this.tokenRemover=function(){},this.$get=function(){return{credentialsRetriever:this.credentialsRetriever,tokenRetriever:this.tokenRetriever,existingTokenRetriever:this.existingTokenRetriever,tokenSaver:this.tokenSaver,tokenRemover:this.tokenRemover}}}).config(["angularJwtAuthToolsProvider",function(e){e.credentialsRetriever=["localStorageService",function(e){return null===localStorage.getItem("auth.username")||null===localStorage.getItem("auth.password")?null:{username:e.get("auth.username"),password:e.get("auth.password")}}],e.tokenSaver=["localStorageService",function(e){e.set("auth.jwt_token",this.token),e.set("auth.jwt_refresh_token",this.refresh_token)}],e.existingTokenRetriever=["localStorageService",function(e){return{token:e.get("auth.jwt_token"),refreshToken:e.get("auth.jwt_refresh_token")}}],e.tokenRemover=["localStorageService",function(e){e.remove("auth.jwt_token","auth.jwt_refresh_token")}],e.tokenRetriever=["$http","WsService",function(t,n){return t.post(e.urlLoginCheck,this,{ignoreAuthModule:!0,skipAuthorization:!0,headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:n.objectToURLEncoded})}]}])}();